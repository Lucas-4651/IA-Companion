<%- include('../partials/header', { title: 'G√©n√©rateur de prompts' }) %>
<%- include('../partials/hamburgerMenu') %>

<main class="page-container">
  <section class="section">
    <div class="card neon-border">
      <h1 class="neon-text">G√©n√©rateur de prompts IA</h1>
      
      <div class="prompt-generator">
        <form id="prompt-form" class="card neon-border">
          <div class="form-group">
            <label for="category" class="neon-text">S√©lectionnez une cat√©gorie</label>
            <select id="category" required class="form-input neon-glow">
              <option value="">Toutes les cat√©gories</option>
              <% categories.forEach(category => { %>
                <option value="<%= category %>"><%= category %></option>
              <% }); %>
            </select>
          </div>
          
          <button type="submit" class="btn neon-btn">‚ú® Afficher les prompts</button>
        </form>

        <div class="result card neon-border" id="prompt-result">
          <h3>Prompts de la cat√©gorie : <span id="selected-category">Toutes</span></h3>
          <div class="card-grid" id="prompts-container">
            <!-- Les prompts seront affich√©s ici -->
          </div>
        </div>
      </div>
    </div>

    <!-- üî• Section des prompts populaires -->
    <div class="card neon-border">
      <h2 class="neon-text">Prompts populaires</h2>
      <div class="card-grid">
        <% popularPrompts.forEach(prompt => { %>
          <div class="card prompt-card neon-border">
            <h3><%= prompt.title %></h3>
            <p class="meta">
              <span class="category"><%= prompt.category %></span> ‚Ä¢ 
              <span class="difficulty"><%= prompt.difficulty %></span>
            </p>
            <div class="prompt-content">
              <p><%= prompt.content %></p>
            </div>
            <div class="prompt-footer">
              <span class="usage">Utilis√© <%= prompt.usageCount %> fois</span>
              <button class="btn neon-btn copy-prompt" data-prompt="<%= prompt.content %>">
                <i class="fas fa-copy"></i> Copier
              </button>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  </section>
</main>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // ‚öôÔ∏è Copie du prompt
    document.body.addEventListener('click', function(e) {
      if (e.target.closest('.copy-prompt')) {
        const button = e.target.closest('.copy-prompt');
        const prompt = button.dataset.prompt;
        
        navigator.clipboard.writeText(prompt)
          .then(() => {
            const icon = button.querySelector('i');
            icon.className = 'fas fa-check';
            button.innerHTML = '<i class="fas fa-check"></i> Copi√©!';
            
            setTimeout(() => {
              button.innerHTML = '<i class="fas fa-copy"></i> Copier';
            }, 2000);
          })
          .catch(err => {
            console.error('Erreur de copie :', err);
          });
      }
    });
    
    // Gestion du formulaire
    const promptForm = document.getElementById('prompt-form');
    const promptsContainer = document.getElementById('prompts-container');
    const selectedCategory = document.getElementById('selected-category');
    
    // Charger les prompts au d√©marrage
    loadPrompts('');
    
    promptForm.addEventListener('submit', function(e) {
      e.preventDefault();
      const category = document.getElementById('category').value;
      loadPrompts(category);
    });
    
    function loadPrompts(category) {
      // Mettre √† jour le titre
      selectedCategory.textContent = category || 'Toutes';
      
      // Filtrer les prompts populaires par cat√©gorie
      const filteredPrompts = category 
        ? popularPrompts.filter(p => p.category === category)
        : popularPrompts;
      
      // Afficher les prompts
      promptsContainer.innerHTML = '';
      
      if (filteredPrompts.length === 0) {
        promptsContainer.innerHTML = `
          <div class="no-results">
            <p>Aucun prompt trouv√© pour cette cat√©gorie</p>
          </div>
        `;
        return;
      }
      
      filteredPrompts.forEach(prompt => {
        const promptCard = document.createElement('div');
        promptCard.className = 'card prompt-card neon-border';
        promptCard.innerHTML = `
          <h3>${prompt.title}</h3>
          <p class="meta">
            <span class="category">${prompt.category}</span> ‚Ä¢ 
            <span class="difficulty">${prompt.difficulty}</span>
          </p>
          <div class="prompt-content">
            <p>${prompt.content}</p>
          </div>
          <div class="prompt-footer">
            <span class="usage">Utilis√© ${prompt.usageCount} fois</span>
            <button class="btn neon-btn copy-prompt" data-prompt="${prompt.content}">
              <i class="fas fa-copy"></i> Copier
            </button>
          </div>
        `;
        promptsContainer.appendChild(promptCard);
      });
    }
    
    // Animation d'apparition progressive
    const cards = document.querySelectorAll('.card');
    cards.forEach((card, i) => {
      card.style.opacity = 0;
      card.style.transform = 'translateY(20px)';
      setTimeout(() => {
        card.style.transition = `opacity 0.4s ${i*0.1}s, transform 0.4s ${i*0.1}s`;
        card.style.opacity = 1;
        card.style.transform = 'translateY(0)';
      }, 100);
    });
  });
  
  // Variable globale pour stocker les prompts populaires
  const popularPrompts = [
    <% popularPrompts.forEach(prompt => { %>
      {
        title: `<%= prompt.title %>`,
        category: `<%= prompt.category %>`,
        difficulty: `<%= prompt.difficulty %>`,
        content: `<%= prompt.content %>`,
        usageCount: <%= prompt.usageCount %>
      },
    <% }); %>
  ];
</script>

<style>
  /* VARIABLES ET BASE */
  :root {
    --neon-primary: #00f3ff;
    --neon-secondary: #00ccff;
    --bg-dark: #0a0a1a;
    --bg-darker: #0f172a;
    --text-light: #e0e0ff;
    --text-muted: #a0b3c0;
    --card-bg: rgba(15, 23, 42, 0.8);
  }
  
  body {
    background: linear-gradient(135deg, var(--bg-dark), var(--bg-darker));
    color: var(--text-light);
    font-family: 'Segoe UI', system-ui, sans-serif;
    line-height: 1.5;
  }
  
  .page-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
  }
  
  .card {
    background: var(--card-bg);
    border: 1px solid rgba(0, 243, 255, 0.2);
    border-radius: 10px;
    padding: 1.2rem;
    backdrop-filter: blur(6px);
    transition: all 0.3s ease;
  }
  
  .neon-border {
    box-shadow: 
      0 0 8px rgba(0, 243, 255, 0.15), 
      inset 0 0 6px rgba(0, 195, 255, 0.1);
  }
  
  .neon-border:hover {
    box-shadow: 
      0 0 12px rgba(0, 243, 255, 0.25),
      inset 0 0 8px rgba(0, 195, 255, 0.15);
    transform: translateY(-4px);
  }
  
  .neon-text {
    color: #e0f7ff;
    text-shadow: 0 0 5px rgba(0, 195, 255, 0.5);
  }
  
  .neon-btn {
    background: linear-gradient(90deg, #003d66, #0066cc);
    color: #e0f7ff;
    border: none;
    padding: 0.7rem 1.4rem;
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    text-shadow: 0 0 3px rgba(0, 195, 255, 0.7);
    display: inline-block;
    margin-top: 1rem;
  }
  
  .neon-btn:hover {
    background: linear-gradient(90deg, #004d80, #0077e6);
    box-shadow: 0 0 12px rgba(0, 195, 255, 0.4);
    transform: translateY(-2px);
  }
  
  .neon-glow {
    box-shadow: 0 0 6px rgba(0, 195, 255, 0.3),
                inset 0 0 3px rgba(0, 243, 255, 0.2);
  }
  
  .neon-glow:focus {
    box-shadow: 0 0 10px rgba(0, 243, 255, 0.5),
                inset 0 0 5px rgba(0, 195, 255, 0.4);
    border-color: #00f3ff;
    outline: none;
  }
  
  h1, h2, h3 {
    font-weight: 600;
    letter-spacing: -0.015em;
    margin-bottom: 1rem;
  }
  
  h1 {
    font-size: 1.8rem;
  }
  
  h2 {
    font-size: 1.4rem;
    padding-bottom: 0.4rem;
    position: relative;
  }
  
  h2::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 40px;
    height: 2px;
    background: var(--neon-primary);
    border-radius: 2px;
  }
  
  h3 {
    font-size: 1.2rem;
    margin-bottom: 0.8rem;
  }
  
  p {
    font-size: 0.9rem;
    color: var(--text-muted);
    line-height: 1.6;
  }
  
  /* STRUCTURE DE LA PAGE */
  .section {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .card-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.2rem;
    margin-top: 1rem;
  }
  
  /* FORMULAIRES */
  .prompt-generator {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
  }
  
  label {
    font-size: 0.95rem;
    font-weight: 500;
  }
  
  .form-input {
    width: 100%;
    padding: 0.8rem;
    border-radius: 8px;
    border: 1px solid rgba(0, 195, 255, 0.3);
    background: rgba(10, 15, 30, 0.6);
    color: var(--text-light);
    font-size: 0.9rem;
  }
  
  .result {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  /* CARDS DE PROMPTS */
  .prompt-card {
    display: flex;
    flex-direction: column;
    height: 100%;
    transition: all 0.3s ease;
  }
  
  .prompt-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 100, 255, 0.2);
  }
  
  .meta {
    font-size: 0.85rem;
    color: var(--neon-secondary);
    margin-bottom: 0.8rem;
    display: flex;
    gap: 0.5rem;
  }
  
  .category {
    font-weight: 500;
  }
  
  .difficulty {
    font-style: italic;
  }
  
  .prompt-content p {
    font-size: 0.9rem;
    line-height: 1.6;
    margin-bottom: 1.2rem;
  }
  
  .prompt-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
    padding-top: 0.8rem;
    border-top: 1px solid rgba(0, 195, 255, 0.1);
  }
  
  .usage {
    font-size: 0.8rem;
    color: var(--text-muted);
  }
  
  .no-results {
    text-align: center;
    padding: 2rem;
    color: var(--text-muted);
    font-size: 0.95rem;
  }
  
  /* RESPONSIVE */
  @media (min-width: 768px) {
    .card-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    #prompts-container .card-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (min-width: 1024px) {
    #prompts-container .card-grid,
    .popular-prompts .card-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>

<%- include('../partials/footer') %>