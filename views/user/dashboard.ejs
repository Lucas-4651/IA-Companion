<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Dashboard | <%= user.username %></title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
  <style>
    :root {
      --bg: #0f172a; --bg-soft: #1e293b; --accent: #0ea5e9; --accent-light: #38bdf8;
      --text: #e2e8f0; --text-soft: #94a3b8; --card: rgba(30, 41, 59, 0.7);
      --border: rgba(148, 163, 184, 0.15); --glow: 0 0 10px rgba(56, 189, 248, 0.25);
    }
    [data-theme="light"] {
      --bg: #f8fafc; --bg-soft: #e2e8f0; --text: #1e293b; --text-soft: #475569;
      --card: rgba(255, 255, 255, 0.8); --border: rgba(15, 23, 42, 0.1);
    }
    * { margin: 0; padding: 0; box-sizing: border-box; font-family: Inter, system-ui, sans-serif; }
    body { background: var(--bg); color: var(--text); display: flex; min-height: 100vh; transition: .3s; }
    .sidebar { width: 220px; background: var(--bg-soft); padding: 1.2rem; display: flex; flex-direction: column; gap: 1rem; border-right: 1px solid var(--border); }
    .sidebar a { display: flex; align-items: center; gap: .75rem; padding: .6rem .8rem; border-radius: 8px; color: var(--text-soft); text-decoration: none; font-size: .9rem; transition: .2s; }
    .sidebar a.active, .sidebar a:hover { background: rgba(14, 165, 233, .15); color: var(--accent-light); }
    .sidebar .logo { font-weight: 700; color: var(--accent); }
    .main { flex: 1; padding: 1.2rem; overflow-y: auto; }
    header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.2rem; }
    .burger { background: none; border: none; color: var(--text-soft); font-size: 1.3rem; cursor: pointer; display: none; }
    @media (max-width: 768px) {
      body { flex-direction: column; }
      .sidebar { position: absolute; top: 0; left: 0; height: 100%; z-index: 10; transform: translateX(-100%); }
      .sidebar.open { transform: translateX(0); }
      .burger { display: block; }
    }
    .grid { display: grid; gap: 1rem; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); }
    .card { background: var(--card); border: 1px solid var(--border); border-radius: 12px; padding: 1.2rem; transition: .3s; }
    .card:hover { transform: translateY(-3px); box-shadow: var(--glow); }
    .stat-ring { position: relative; width: 80px; height: 80px; margin: 0 auto .5rem; }
    .stat-ring svg { width: 100%; height: 100%; transform: rotate(-90deg); }
    .stat-ring circle { fill: none; stroke-width: 7; stroke-linecap: round; }
    .stat-ring .bg { stroke: var(--border); } .stat-ring .progress { stroke: var(--accent); }
    .stat-ring .txt { position: absolute; inset: 0; display: flex; align-items: center; justify-content: center; font-weight: 600; }
    /* Mini-chat flottant */
    #mini-chat { position: fixed; bottom: 20px; right: 20px; width: 300px; height: 400px; background: var(--card); border: 1px solid var(--border); border-radius: 12px; display: flex; flex-direction: column; z-index: 999; display: none; }
    #chat-messages { flex: 1; padding: .5rem; overflow-y: auto; font-size: .8rem; }
    #chat-input { border: none; border-top: 1px solid var(--border); padding: .5rem; }
    #chatToggle { position: fixed; bottom: 20px; right: 330px; z-index: 999; background: var(--accent); color: #fff; border: none; border-radius: 50%; width: 50px; height: 50px; cursor: pointer; }
    body.focus-mode .card:not(.focus) { display: none !important; }
  </style>
</head>

<body>
  <!-- Sidebar -->
  <aside class="sidebar" id="sidebar">
    <div class="logo">IA-Hub</div>
    <nav>
      <a href="/dashboard" class="active"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
      <a href="/user/favorites"><i class="fas fa-star"></i> Favoris</a>
      <a href="/ai"><i class="fas fa-robot"></i> Explorer</a>
      <a href="/prompts"><i class="fas fa-terminal"></i> Prompts</a>
      <a href="/user/settings"><i class="fas fa-cog"></i> Paramètres</a>
    </nav>
  </aside>

  <!-- Main -->
  <main class="main">
    <header>
      <button class="burger" id="burger"><i class="fas fa-bars"></i></button>
      <h1>Dashboard</h1>
      <button id="themeBtn" style="background:none;border:none;color:var(--text-soft);cursor:pointer">
        <i class="fas fa-moon"></i>
      </button>
    </header>

    <!-- Avatar -->
    <div style="text-align:center;margin-bottom:1rem">
      <img id="avatarImg" src="<%= user.avatar || '/img/default.png' %>" style="width:80px;height:80px;border-radius:50%;object-fit:cover;">
      <div style="font-size:.9rem;color:var(--text-soft)"><%= user.username %></div>
    </div>

    <!-- Stats -->
    <section class="grid">
      <div class="card">
        <div class="stat-ring">
          <svg viewBox="0 0 100 100">
            <circle class="bg" cx="50" cy="50" r="40"></circle>
            <circle class="progress" cx="50" cy="50" r="40"
                    stroke-dasharray="251.2"
                    stroke-dashoffset="<%= 251.2 - 251.2 * favoritesCount / 50 %>">
            </circle>
          </svg>
          <span class="txt"><%= favoritesCount %></span>
        </div>
        <div style="text-align:center;font-size:.9rem">IA favorites</div>
      </div>

      <div class="card">
        <div class="stat-ring">
          <svg viewBox="0 0 100 100">
            <circle class="bg" cx="50" cy="50" r="40"></circle>
            <circle class="progress" cx="50" cy="50" r="40"
                    stroke-dasharray="251.2"
                    stroke-dashoffset="<%= 251.2 - 251.2 * commentsCount / 100 %>">
            </circle>
          </svg>
          <span class="txt"><%= commentsCount %></span>
        </div>
        <div style="text-align:center;font-size:.9rem">Commentaires</div>
      </div>
    </section>

    <!-- Mini-chat -->
    <div id="mini-chat">
      <div id="chat-messages"></div>
      <input id="chat-input" placeholder="Écrire…">
    </div>
    <button id="chatToggle"><i class="fas fa-comment"></i></button>
  </main>

  <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
  <script>
    /* ---------- Theme ---------- */
    const body = document.body, btn = document.getElementById('themeBtn'), icon = btn.querySelector('i');
    const saved = localStorage.getItem('theme') || 'dark';
    body.dataset.theme = saved;
    icon.className = saved === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
    btn.onclick = () => {
      const next = body.dataset.theme === 'dark' ? 'light' : 'dark';
      body.dataset.theme = next;
      localStorage.setItem('theme', next);
      icon.className = next === 'dark' ? 'fas fa-sun' : 'fas fa-moon';
    };

    /* ---------- Burger ---------- */
    const burger = document.getElementById('burger'), sidebar = document.getElementById('sidebar');
    burger.onclick = () => sidebar.classList.toggle('open');

    /* ---------- Focus mode ---------- */
    let focusMode = false;
    document.addEventListener('keydown', e => {
      if (e.ctrlKey && e.key === 'f') {
        focusMode = !focusMode;
        body.classList.toggle('focus-mode', focusMode);
      }
    });

    /* ---------- WebSocket Chat ---------- */
    const socket = io();
    const chat = document.getElementById('mini-chat');
    const msgs = document.getElementById('chat-messages');
    const input = document.getElementById('chat-input');
    document.getElementById('chatToggle').onclick = () => chat.style.display = chat.style.display === 'flex' ? 'none' : 'flex';
    socket.on('chat msg', data => {
      const div = document.createElement('div');
      div.textContent = `${data.user}: ${data.text}`;
      msgs.appendChild(div);
      msgs.scrollTop = msgs.scrollHeight;
    });
    input.addEventListener('keydown', e => {
      if (e.key === 'Enter' && input.value.trim()) {
        socket.emit('chat msg', { user: '<%= user.username %>', text: input.value });
        input.value = '';
      }
    });
   
  document.addEventListener('click', e => {
    const sidebar = document.getElementById('sidebar');
    const burger  = document.getElementById('burger');
    // Si on clique en dehors de la sidebar ET que la sidebar est ouverte
    if (!sidebar.contains(e.target) && !burger.contains(e.target)) {
      sidebar.classList.remove('open');
    }
  });



    /* ---------- Notifications ---------- */
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('/sw.js');
      navigator.serviceWorker.ready.then(reg => {
        reg.pushManager.subscribe({ userVisibleOnly: true, applicationServerKey: '<%- process.env.VAPID_PUBLIC_KEY %>' })
          .then(sub => fetch('/user/push/subscribe', { method: 'POST', body: JSON.stringify(sub), headers: { 'Content-Type': 'application/json' } }));
      });
    }
  </script>
</body>
</html>
